plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
}

// local.properties 파일에서 민감한 정보 읽기
def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
def dbUrl = ""
def dbUser = ""
def dbPass = ""

if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
    dbUrl = localProperties.getProperty('aws.rds.url', '')
    dbUser = localProperties.getProperty('aws.rds.user', '')
    dbPass = localProperties.getProperty('aws.rds.password', '')
}

android {
    namespace 'com.example.cryptoanalysisai'
    compileSdk 35

    defaultConfig {
        applicationId "com.example.cryptoanalysisai"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // AWS RDS 연결 정보 (변수 참조)
        buildConfigField "String", "DB_URL", "\"${dbUrl}\""
        buildConfigField "String", "DB_USER", "\"${dbUser}\""
        buildConfigField "String", "DB_PASS", "\"${dbPass}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.credentials
    implementation libs.androidx.credentials.play.services.auth
    implementation libs.googleid
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Retrofit 및 네트워크 라이브러리
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'

    // Gson (JSON 파싱)
    implementation 'com.google.code.gson:gson:2.10.1'

    // ViewModel 및 LiveData
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.6.2'

    // MPAndroidChart (차트 라이브러리)
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // Glide (이미지 로딩)
    implementation 'com.github.bumptech.glide:glide:4.16.0'

    // Room Database
    implementation 'androidx.room:room-runtime:2.6.1'
    annotationProcessor 'androidx.room:room-compiler:2.6.1'

    // Coroutines 지원
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'

    // MariaDB JDBC 드라이버 추가
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'

    // 테스트 라이브러리
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
}